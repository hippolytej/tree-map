{"version":3,"sources":["components/linkbutton.jsx","components/addressForm.jsx","components/homepage.jsx","components/treeLayer.jsx","components/button.jsx","components/treePopUp.jsx","components/progress.jsx","components/image.jsx","components/drawer.jsx","api_utils/wikiData.jsx","api_utils/parisData.jsx","components/map.jsx","components/explore.jsx","api_utils/geocode.jsx","components/aroundMe.jsx","notfound.js","serviceWorker.js","index.js"],"names":["withStyles","theme","button","margin","props","classes","react_default","a","createElement","Button_default","size","variant","className","component","to","Link","undefined","href","text","AddressForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","event","target","value","onChange","root","noValidate","autoComplete","TextField_default","id","label","React","Component","HomePage","state","address","handleAddressChange","setState","src","alt","height","linkbutton","pathname","addressForm","TreeLayer","treeIds","treeDict","lib_esm","type","layout","icon-image","map","onMouseEnter","onTreeHover","onMouseLeave","onTreeEndHover","coordinates","geometry","onClick","onTreeClick","key","TreePopUp","hoveredTree","onCloseButtonClick","onInfoButtonClick","isClicked","long","lat","cityMapperLink","concat","recordid","offset","style","overflowX","fontFamily","fontSize","marginTop","marginBottom","fields","libellefrancais","width","fontWeight","textAlign","genre","espece","dateplantation","substr","isMobile","marginLeft","marginRight","rel","display","flexDirection","justifyContent","components_button","progress","spacing","unit","CircularProgress_default","color","ImageWithStatusText","imageLoaded","console","log","imageUrl","onLoad","handleImageLoaded","onError","handleImageErrored","TemporaryDrawer","treeName","Drawer_default","anchor","open","openDrawer","onClose","toggleDrawer","tabIndex","role","onKeyDown","wikiRow","components_image","thumbnailUrl","altText","wikiTextContainer","wikiDesc","list","fullList","treeImg","float","wikiData","_x","_wikiData","apply","arguments","_callee","keyword","safeKeyword","urlBase","bestResultTitle","bestResultId","searchResponse","responseJson","desc","descQueryResponse","descQueryJson","descPages","thumbnail","thumbQueryResponse","thumbQueryJson","regenerator_default","wrap","_context","prev","next","split","join","fetch","sent","json","query","search","title","pageid","t0","pages","keys","extract","t1","source","t2","abrupt","stop","ids","response","maxNbTrees","i","Math","min","parameters","rows","nhits","push","records","nbTrees","parisData","_x2","_x3","_parisData","_callee2","latitude","longitude","radius","_context2","Map","ReactMapboxGl","minZoom","maxZoom","accessToken","token","mapStyle","flyToOptions","speed","TreeMap","onMapLoad","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","hoveredTreeID","_ref","getCanvas","cursor","clickedTreeID","_ref2","treeId","name","wikiTreeData","clickedTreeName","mapCenter","zoom","treeData","_remarkableParisData","onStyleLoad","center","containerStyle","treeLayer","treePopUp","drawer","leftDrawer","Explore","components_map","features","locationAvailable","aroundMe","locationFound","position","coords","errorHandler","err","code","alert","location","_this2","_getCoordinates","then","navigator","geolocation","getCurrentPosition","timeout","getUserPosition","aroundMe_Map","NotFound","Boolean","window","hostname","match","routing","HashRouter","Switch","Route","exact","path","AroundMe","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f7c29df.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nfunction LinkButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant={props.variant}\n        className={classes.button}\n        component={props.to ? Link : undefined}\n        to={props.to}\n        href={props.href}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LinkButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nclass AddressForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const text = event.target.value;\n    this.props.onChange(text);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"address-basic\"\n          label=\"Address\"\n          onChange={this.handleChange}\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddressForm);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport LinkButton from \"./linkbutton\";\nimport AddressForm from \"./addressForm\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n    };\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n  }\n\n  handleAddressChange(value) {\n    this.setState({ address: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <img src=\"/logo_canopee_v0.001.png\" alt=\"logo\" height=\"200\" />\n          <h1>canopee</h1>\n          <p>Votre guide arboricole</p>\n        </header>\n        <main>\n          <LinkButton text=\"Explorez\" variant=\"outlined\" to=\"/explore\" />\n          <LinkButton\n            text=\"Autour de vous\"\n            variant=\"outlined\"\n            to={{ pathname: \"/around-me\", state: this.state }}\n          />\n          <AddressForm\n            onChange={this.handleAddressChange}\n            value={this.state.address}\n          />\n        </main>\n        <footer>\n          <LinkButton\n            className=\"inner\"\n            text=\"Code\"\n            href={\"https://github.com/hippolytej/tree-map\"}\n          />\n          <LinkButton\n            text=\"Coolitude\"\n            href={\"https://www.arbres.org/actualite.html\"}\n          />\n          <LinkButton\n            text=\"Data\"\n            href={\n              \"https://opendata.paris.fr/explore/dataset/les-arbres/information/\"\n            }\n          />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Layer, Feature } from \"react-mapbox-gl\";\n\nclass TreeLayer extends Component {\n  render() {\n    const treeIds = this.props.treeIds;\n    const treeDict = this.props.treeDict;\n    return (\n      <Layer type=\"symbol\" id={\"trees\"} layout={{ \"icon-image\": \"billy\" }}>\n        {treeIds.map((id) => (\n          <Feature\n            onMouseEnter={this.props.onTreeHover.bind(this, id)}\n            onMouseLeave={this.props.onTreeEndHover.bind(this)}\n            coordinates={treeDict[id].geometry.coordinates}\n            onClick={this.props.onTreeClick.bind(null, id)}\n            key={id}\n          />\n        ))}\n      </Layer>\n    );\n  }\n}\n\nexport default TreeLayer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nfunction PopUpButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={props.onClick}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nPopUpButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PopUpButton);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popup } from \"react-mapbox-gl\";\nimport PopUpButton from \"./button\";\nimport { isMobile } from \"react-device-detect\";\n\nclass TreePopUp extends Component {\n  render() {\n    var hoveredTree = this.props.hoveredTree;\n    const onCloseButtonClick = this.props.onCloseButtonClick;\n    const onInfoButtonClick = this.props.onInfoButtonClick;\n    const isClicked = this.props.isClicked;\n    const long = hoveredTree.geometry.coordinates[0];\n    const lat = hoveredTree.geometry.coordinates[1];\n    const cityMapperLink = `https://citymapper.com/directions?endcoord=${lat}%2C${long}&endname=Arbre%20Remarquable`;\n    return (\n      <Popup\n        key={hoveredTree.recordid}\n        coordinates={hoveredTree.geometry.coordinates}\n        offset={15}\n        // style={{maxWidth: 200, minWidth: 200}}\n      >\n        <div style={{ overflowX: \"auto\" }}>\n          <h3\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              marginTop: 5,\n              marginBottom: 5,\n            }}\n          >\n            {hoveredTree.fields.libellefrancais}\n          </h3>\n          <table style={{ width: \"100%\" }}>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Genre\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.genre}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Espèce\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.espece}\n                </td>\n              </tr>\n              {\"dateplantation\" in hoveredTree.fields ? (\n                <tr>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      fontWeight: \"medium\",\n                    }}\n                  >\n                    Planté en\n                  </td>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {hoveredTree.fields.dateplantation.substr(0, 4)}\n                  </td>\n                </tr>\n              ) : null}\n            </tbody>\n          </table>\n          {isClicked || isMobile ? (\n            <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <a\n                href={cityMapperLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  src=\"https://static.citymapper.com/img/embed/GetMeThere_Citymapper.png\"\n                  alt=\"Get directions with Citymapper\"\n                />\n              </a>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PopUpButton\n                  onClick={onInfoButtonClick}\n                  text=\"Infos\"\n                ></PopUpButton>\n                <PopUpButton\n                  onClick={onCloseButtonClick}\n                  text=\"Fermer\"\n                ></PopUpButton>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </Popup>\n    );\n  }\n}\n\nTreePopUp.propTypes = {\n  onInfoButtonClick: PropTypes.func.isRequired,\n};\n\nexport default TreePopUp;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = (theme) => ({\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React from \"react\";\nimport CircularIndeterminate from \"./progress\";\n\nclass ImageWithStatusText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { imageLoaded: false };\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageLoaded: true });\n    console.log(\"LOADED\", this.state);\n  }\n\n  handleImageErrored() {\n    this.setState({ imageLoaded: false });\n  }\n\n  render() {\n    const imageLoaded = this.state.imageLoaded;\n    const imageUrl = this.props.imageUrl;\n    return (\n      <div>\n        <img\n          src={imageUrl}\n          onLoad={this.handleImageLoaded.bind(this)}\n          onError={this.handleImageErrored.bind(this)}\n          alt=\"\"\n        />\n        {imageLoaded ? null : <CircularIndeterminate />}\n      </div>\n    );\n  }\n}\n\nexport default ImageWithStatusText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { isMobile } from \"react-device-detect\";\nimport ImageWithStatusText from \"./image\";\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  treeImg: {\n    marginTop: 10,\n    marginBottom: 10,\n    marginRight: 10,\n    width: 100,\n    display: \"inlineBlock\",\n    float: \"left\",\n  },\n  wikiRow: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  wikiTextContainer: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n};\n\nclass TemporaryDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n    var treeName = this.props.treeName;\n    return (\n      <div>\n        <Drawer\n          anchor={isMobile ? \"bottom\" : \"left\"}\n          open={this.props.openDrawer}\n          onClose={this.props.toggleDrawer}\n        >\n          <div\n            style={{ width: isMobile ? \"auto\" : 350 }}\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.props.toggleDrawer}\n            onKeyDown={this.props.toggleDrawer}\n          >\n            <div className={classes.wikiRow}>\n              {treeName}\n              <ImageWithStatusText\n                imageUrl={this.props.thumbnailUrl}\n                altText={treeName}\n              />\n            </div>\n            <div className={classes.wikiTextContainer}>\n              <p>{this.props.wikiDesc}</p>\n            </div>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);\n","export async function wikiData(keyword) {\n  var safeKeyword = keyword.split(\" \").join(\"_\");\n  console.log(\"Safe Keyword: \", safeKeyword);\n  var urlBase = \"https://fr.wikipedia.org/w/api.php?format=json&origin=*\";\n  // First search for a page, get best result, get the title of the best result\n  var bestResultTitle = \"\";\n  var bestResultId = 0;\n  try {\n    const searchResponse = await fetch(\n      `${urlBase}&action=query&list=search&srsearch=${safeKeyword}`\n    );\n    // `${urlBase}&action=opensearch&search=${safeGenre}+incategory:Arbre&redirects=resolve`);\n    const responseJson = await searchResponse.json();\n    console.log(\"Search response Json\", responseJson);\n    bestResultTitle = await responseJson.query.search[0].title;\n    bestResultId = await responseJson.query.search[0].pageid;\n    console.log(\"Best result\", bestResultTitle);\n  } catch (error) {\n    console.log(\"search error\", error);\n  }\n\n  var desc = \"\";\n  try {\n    const descQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${bestResultTitle}`\n    );\n    const descQueryJson = await descQueryResponse.json();\n    console.log(\"descQuery Json\", descQueryJson);\n    const descPages = await descQueryJson.query.pages;\n    console.log(\"Pages\", descPages);\n    desc = await descPages[Object.keys(descPages)[0]].extract;\n    // console.log(\"desc\", desc);\n  } catch (error) {\n    console.log(\"desc error\", error);\n  }\n\n  // Then query the best result's page :)\n  var thumbnail = \"\";\n  try {\n    const thumbQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=pageimages&titles=${bestResultTitle}&pithumbsize=200`\n    );\n    const thumbQueryJson = await thumbQueryResponse.json();\n    console.log(\"thumbQuery Json\", thumbQueryJson);\n    thumbnail = await thumbQueryJson.query.pages[bestResultId].thumbnail.source;\n    console.log(\"Thumbnail\", thumbnail);\n  } catch (error) {\n    console.log(\"thumbnail error\", error);\n  }\n\n  return this.setState(\n    {\n      wikiDesc: desc,\n      thumbnailUrl: thumbnail,\n    },\n    function () {\n      console.log(\"wikiData\", this.state.thumbnailUrl);\n    }\n  );\n}\n","export async function remarkableParisData() {\n  var ids = [];\n  const response = await fetch(\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=arbresremarquablesparis&rows=200\"\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n  }\n  return this.setState(\n    {\n      treeDict: responseJson.records,\n      nbTrees: maxNbTrees,\n      treeIds: ids,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n\nexport async function parisData(latitude, longitude, radius) {\n  console.log(\"api call lat\", latitude);\n  console.log(\"api call long\", longitude);\n  var ids = [];\n  var urlBase =\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=les-arbres&q=&facet=typeemplacement&facet=domanialite&facet=arrondissement&facet=libellefrancais&facet=genre&facet=espece&facet=varieteoucultivar&facet=circonferenceencm&facet=hauteurenm&facet=stadedeveloppement&facet=remarquable&geofilter.distance=\";\n  const response = await fetch(\n    `${urlBase}${latitude}%2C${longitude}%2C${radius}&rows=200`\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n  }\n  return this.setState(\n    {\n      treeDict: responseJson.records,\n      nbTrees: maxNbTrees,\n      treeIds: ids,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n","import React, { Component } from \"react\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport { GeolocateControl } from \"mapbox-gl\";\nimport TreeLayer from \"./treeLayer\";\nimport TreePopUp from \"./treePopUp\";\nimport LinkButton from \"./linkbutton\";\nimport TemporaryDrawer from \"./drawer\";\nimport { token, style } from \"../config.json\";\nimport { isMobile } from \"react-device-detect\";\nimport { wikiData } from \"../api_utils/wikiData\";\nimport { remarkableParisData } from \"../api_utils/parisData\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 11,\n  maxZoom: 16,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst flyToOptions = {\n  speed: 0.6,\n};\n\nclass TreeMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeDict: \"\",\n      nbTrees: 0,\n      treeIds: [],\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      clickedTreeName: \"\",\n      mapCenter: [2.3466110229492188, 48.85613168160397],\n      zoom: [12],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.onInfoButtonClick = this.onInfoButtonClick.bind(this);\n  }\n\n  onMapLoad = (map) => {\n    map.addControl(\n      new GeolocateControl({\n        positionOptions: { enableHighAccuracy: true },\n        trackUserLocation: false,\n      })\n    );\n  };\n\n  onTreeHover = (hoveredTreeID, { map }) => {\n    map.getCanvas().style.cursor = \"pointer\";\n    this.setState({\n      hoveredTreeID:\n        this.state.clickedTreeID || this.state.clickedTreeID === 0\n          ? \"\"\n          : hoveredTreeID,\n    });\n    if (isMobile) {\n      this.setState({ clickedTreeID: hoveredTreeID });\n    }\n  };\n\n  onTreeEndHover = ({ map }) => {\n    map.getCanvas().style.cursor = \"\";\n    this.setState({ hoveredTreeID: \"\" });\n  };\n\n  onTreeClick = (hoveredTreeID) => {\n    this.setState({\n      hoveredTreeID: hoveredTreeID,\n      clickedTreeID: hoveredTreeID,\n    });\n  };\n\n  onInfoButtonClick = () => {\n    this.setState({\n      openDrawer: true,\n      //mapCenter: this.state.treeDict[hoveredTreeID].geometry.coordinates\n    });\n    var treeId = this.state.hoveredTreeID\n      ? this.state.hoveredTreeID\n      : this.state.clickedTreeID;\n    var name = this.state.treeDict[treeId].fields.libellefrancais;\n    var genre = this.state.treeDict[treeId].fields.genre;\n    var espece = this.state.treeDict[treeId].fields.espece;\n    var keyword = genre + \"_\" + espece;\n    this.wikiTreeData(keyword);\n    this.setState({ clickedTreeName: name });\n  };\n\n  onCloseButtonClick = () => {\n    this.setState({\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      //mapCenter: this.state.treeDict[hoveredTreeID].geometry.coordinates\n    });\n  };\n\n  toggleDrawer = () => {\n    this.setState({\n      openDrawer: false,\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    });\n  };\n\n  componentDidMount() {\n    this.treeData();\n  }\n\n  treeData() {\n    remarkableParisData.apply(this);\n  }\n\n  wikiTreeData() {\n    wikiData.apply(this, arguments);\n  }\n\n  render() {\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    const mapCenter = this.state.mapCenter;\n    const zoom = this.state.zoom;\n    return (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n        >\n          <LinkButton text=\"Accueil\" variant=\"outlined\" to=\"/\">\n            Home\n          </LinkButton>\n          <TreeLayer\n            onTreeHover={this.onTreeHover}\n            onTreeEndHover={this.onTreeEndHover}\n            treeIds={this.state.treeIds}\n            treeDict={this.state.treeDict}\n            onTreeClick={this.onTreeClick}\n          />\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeDict[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n        </Map>\n        <TemporaryDrawer\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          treeName={this.state.clickedTreeName}\n          leftDrawer={this.state.leftDrawer}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TreeMap;\n","import React, { Component } from \"react\";\nimport TreeMap from \"./map\";\nimport TemporaryDrawer from \"./drawer\";\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div>\n        <TemporaryDrawer />\n        <TreeMap />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","export async function getCoordinates(address, token) {\n  const response = await fetch(\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?access_token=${token}`\n  );\n  const responseJson = await response.json();\n\n  return this.setState({\n    longitude: responseJson.features[0].center[0],\n    latitude: responseJson.features[0].center[1],\n    locationAvailable: true,\n  });\n}\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport TreePopUp from \"./treePopUp\";\nimport LinkButton from \"./linkbutton\";\nimport TemporaryDrawer from \"./drawer\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport { token, style } from \"../config.json\";\nimport { isMobile } from \"react-device-detect\";\nimport { wikiData } from \"../api_utils/wikiData\";\nimport { parisData } from \"../api_utils/parisData\";\nimport TreeLayer from \"./treeLayer\";\nimport CircularIndeterminate from \"./progress\";\nimport { getCoordinates } from \"../api_utils/geocode\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 11,\n  maxZoom: 20,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst radius = 500;\nconst flyToOptions = {\n  speed: 0,\n};\n\nclass aroundMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationAvailable: false,\n      treeDict: \"\",\n      nbTrees: 0,\n      treeIds: [],\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      address: this.props.location.state\n        ? this.props.location.state.address\n        : \"\",\n      latitude: 0,\n      longitude: 0,\n      zoom: [17],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n  }\n\n  locationFound = (position) => {\n    this.setState(\n      {\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude,\n        locationAvailable: true,\n      },\n      () => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      }\n    );\n  };\n\n  errorHandler = (err) => {\n    if (err.code === 1) {\n      alert(\"Error: Access is denied!\");\n    } else if (err.code === 2) {\n      alert(\"Error: Position is unavailable!\");\n    }\n  };\n\n  getUserPosition() {\n    console.log(\"CALLED WITH \", this.state);\n    if (this.state.address) {\n      getCoordinates.apply(this, [this.state.address, token]).then(() => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      });\n    } else if (navigator.geolocation) {\n      var options = { timeout: 60000 };\n      navigator.geolocation.getCurrentPosition(\n        this.locationFound,\n        this.errorHandler,\n        options\n      );\n    } else {\n      alert(\n        \"Sorry, browser does not support geolocation and no address was supplied\"\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.locationAvailable) {\n      parisData.apply(this, [\n        this.state.latitude,\n        this.state.longitude,\n        radius,\n      ]);\n    } else {\n      this.getUserPosition.apply(this);\n    }\n  }\n\n  onTreeHover = (hoveredTreeID, { map }) => {\n    map.getCanvas().style.cursor = \"pointer\";\n    this.setState({\n      hoveredTreeID:\n        this.state.clickedTreeID || this.state.clickedTreeID === 0\n          ? \"\"\n          : hoveredTreeID,\n    });\n    if (isMobile) {\n      this.setState({ clickedTreeID: hoveredTreeID });\n    }\n  };\n\n  onTreeEndHover = ({ map }) => {\n    map.getCanvas().style.cursor = \"\";\n    this.setState({ hoveredTreeID: \"\" });\n  };\n\n  onTreeClick = (hoveredTreeID) => {\n    this.setState({\n      hoveredTreeID: hoveredTreeID,\n      clickedTreeID: hoveredTreeID,\n    });\n  };\n\n  onInfoButtonClick = () => {\n    console.log(\"CLICKED\");\n    this.setState({\n      openDrawer: true,\n      //mapCenter: this.state.treeDict[hoveredTreeID].geometry.coordinates\n    });\n    var treeId = this.state.hoveredTreeID\n      ? this.state.hoveredTreeID\n      : this.state.clickedTreeID;\n    var genre = this.state.treeDict[treeId].fields.genre;\n    var espece = this.state.treeDict[treeId].fields.espece;\n    var keyword = genre + \"_\" + espece;\n    this.wikiTreeData(keyword);\n  };\n\n  onCloseButtonClick = () => {\n    this.setState({\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      //mapCenter: this.state.treeDict[hoveredTreeID].geometry.coordinates\n    });\n  };\n\n  toggleDrawer = () => {\n    this.setState({\n      openDrawer: false,\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    });\n  };\n\n  wikiTreeData() {\n    wikiData.apply(this, arguments);\n  }\n\n  render() {\n    const mapCenter = [this.state.longitude, this.state.latitude];\n    const zoom = this.state.zoom;\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    return this.state.locationAvailable ? (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n        >\n          <LinkButton text=\"Accueil\" variant=\"outlined\" to=\"/\">\n            Home\n          </LinkButton>\n          <TreeLayer\n            onTreeHover={this.onTreeHover}\n            onTreeEndHover={this.onTreeEndHover}\n            treeIds={this.state.treeIds}\n            treeDict={this.state.treeDict}\n            onTreeClick={this.onTreeClick}\n          />\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeDict[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n        </Map>\n        <TemporaryDrawer\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          leftDrawer={this.state.leftDrawer}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    ) : (\n      <CircularIndeterminate />\n    );\n  }\n}\n\nexport default aroundMe;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>404</h1>\n        </div>\n        <p>Wow c'est la hess ici ou quoi ?</p>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport './index.css'\nimport HomePage from './components/homepage';\nimport Explore from './components/explore';\nimport AroundMe from './components/aroundMe';\nimport NotFound from './notfound';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <HashRouter>\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/around-me\" component={AroundMe} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </HashRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}