{"version":3,"sources":["components/linkbuttons.jsx","components/divider.jsx","components/addressForm.jsx","components/homepage.jsx","components/treeLayer.jsx","components/button.jsx","components/treePopUp.jsx","components/progress.jsx","components/image.jsx","components/wikiDrawer.jsx","utils/parisData.jsx","utils/wikiData.jsx","utils/map_utils.jsx","components/remarkableTreesMap.jsx","components/explore.jsx","utils/geocode.jsx","components/legendPanel.jsx","components/nearbyTreesMap.jsx","components/aroundMe.jsx","notfound.js","serviceWorker.js","index.js"],"names":["styles","theme","button","margin","justifyContent","RegularLink","withStyles","props","classes","react_default","a","createElement","Button_default","size","color","variant","className","component","to","Link","undefined","href","text","FloatingLink","Fab_default","aria-label","logo","root","marginTop","width","maxWidth","Divider_default","AddressForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","onEnterDown","event","target","value","onChange","e","keyCode","style","display","flexDirection","paddingTop","noValidate","autoComplete","Input_default","placeholder","input","onKeyDown","fullWidth","IconButton_default","disabled","onClick","Eco_default","React","Component","HomePage","state","address","handleAddressChange","setState","history","push","pathname","src","alt","height","Map_default","divider","LocationOn_default","addressForm","TreeLayer","treeIds","treeArray","markerType","lib_esm","type","id","treeType","layout","icon-image","paint","circle-radius","circle-color","map","onMouseEnter","onTreeHover","onMouseLeave","onTreeEndHover","coordinates","geometry","onTreeClick","key","TreePopUp","hoveredTree","onCloseButtonClick","onInfoButtonClick","isClicked","long","lat","cityMapperLink","concat","recordid","offset","overflowX","fontFamily","fontSize","marginBottom","fields","libellefrancais","fontWeight","textAlign","genre","espece","dateplantation","substr","isMobile","marginLeft","marginRight","getMeThere","rel","components_button","progress","CircularProgress_default","ImageWithStatusText","componentDidMount","timerHandle","setTimeout","imageLoaded","componentWillUnmount","clearTimeout","console","log","imageUrl","onLoad","handleImageLoaded","onError","handleImageErrored","TemporaryDrawer","tabIndex","role","toggleDrawer","wikiRow","treeName","components_image","thumbnailUrl","altText","wikiTextContainer","alignItems","wikiDesc","Drawer_default","anchor","open","openDrawer","onClose","wikiContent","mobileContent","maxHeight","treeImg","float","bottom","overflow","colors","materialColors","allColors","shuffledColorNames","array","tmp","current","top","length","Math","floor","random","shuffle","keys","_i","_arr","intensity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","colorName","err","return","getColors","_callee","ids","response","responseJson","maxNbTrees","i","regenerator_default","wrap","_context","prev","fetch","sent","json","min","parameters","rows","nhits","abrupt","records","nbTrees","stop","parisData","_x","_x2","_x3","_parisData","apply","arguments","_callee2","latitude","longitude","radius","treeNamesDict","uniqueLibelleCount","libelle","_context2","keyword","safeKeyword","urlBase","bestResultTitle","bestResultId","searchResponse","desc","descQueryResponse","descQueryJson","descPages","thumbnail","thumbQueryResponse","thumbQueryJson","split","join","query","search","title","pageid","t0","pages","extract","t1","source","t2","hoveredTreeID","_ref","getCanvas","cursor","clickedTreeID","_ref2","treeId","_wikiData","onMapLoad","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","Map","ReactMapboxGl","minZoom","maxZoom","accessToken","token","mapStyle","flyToOptions","speed","RemarkableTreesMap","clickedTreeName","mapCenter","zoom","wikiTreeData","mapUtils","treeData","_remarkableParisData","remarkableTreesMap_Map","onStyleLoad","center","containerStyle","maxBounds","treeLayer","treePopUp","wikiDrawer","Explore","remarkableTreesMap","features","locationAvailable","legendContent","item","name","verticalAlign","backgroundColor","borderRadius","panel","background","border","boxShadow","expansionPanelSummaryExpandIcon","right","details","pute","ExpansionPanel_default","defaultExpanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","NearbyTreesMap","locationFound","position","coords","errorHandler","code","alert","_this2","_getCoordinates","then","navigator","geolocation","getCurrentPosition","timeout","getUserPosition","_this3","nearbyTreesMap_Map","legendPanel","syle","content","nearbyTreesMap","location","NotFound","Boolean","window","hostname","match","routing","HashRouter","Switch","Route","exact","path","AroundMe","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d940c8e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 3,\n    justifyContent: \"center\",\n  },\n});\n\nfunction LinkButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"inherit\"\n        variant={props.variant}\n        className={classes.button}\n        component={props.to ? Link : undefined}\n        to={props.to}\n        href={props.href}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nfunction FloatingLinkButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Fab\n        size=\"small\"\n        color=\"primary\"\n        variant=\"extended\"\n        aria-label=\"Add\"\n        className={classes.margin}\n        component={props.to ? Link : undefined}\n        to={props.to}\n        href={props.href}\n      >\n        {props.logo}\n        {props.text}\n      </Fab>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nFloatingLinkButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst RegularLink = withStyles(styles)(LinkButton);\nconst FloatingLink = withStyles(styles)(FloatingLinkButton);\n\nexport { RegularLink, FloatingLink };\n","import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  root: {\n    marginTop: \"20px\",\n    width: \"90vw\",\n    maxWidth: \"500px\",\n  },\n});\n\nfunction MiddleDivider(props) {\n  const { classes } = props;\n  return <Divider className={classes.root} variant=\"middle\" />;\n}\n\nMiddleDivider.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MiddleDivider);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\n\nconst styles = (theme) => ({\n  input: {\n    width: \"60vw\",\n    maxWidth: \"300px\",\n    paddingTop: 5,\n  },\n});\n\nclass AddressForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.onEnterDown = this.onEnterDown.bind(this);\n  }\n\n  handleChange(event) {\n    const text = event.target.value;\n    this.props.onChange(text);\n  }\n\n  onEnterDown(e) {\n    if (e.keyCode === 13) {\n      this.props.onEnterDown();\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\", paddingTop: 30 }}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Input\n            placeholder={this.props.placeholder}\n            className={classes.input}\n            value={this.props.value}\n            onChange={this.handleChange}\n            onKeyDown={this.onEnterDown}\n            fullWidth={true}\n          />\n        </form>\n        <IconButton\n          disabled={this.props.value === \"\"}\n          color=\"primary\"\n          size=\"small\"\n          aria-label=\"Go\"\n          onClick={this.props.onEnterDown}\n        >\n          <EcoIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddressForm);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { RegularLink, FloatingLink } from \"./linkbuttons\";\nimport MiddleDivider from \"./divider\";\nimport AddressForm from \"./addressForm\";\nimport LocationOn from \"@material-ui/icons/LocationOn\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n    };\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.onEnterDown = this.onEnterDown.bind(this);\n  }\n\n  handleAddressChange(value) {\n    this.setState({ address: value });\n  }\n\n  onEnterDown() {\n    this.props.history.push({ pathname: \"/around-me\", state: this.state });\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <img src=\"/logo_canopee_v0.001.png\" alt=\"logo\" height={\"100%\"} />\n        </header>\n        <main>\n          <h3>A la recherche d'un bel arbre ?</h3>\n          <FloatingLink\n            text=\"Carte des arbres remarquables\"\n            variant=\"outlined\"\n            to=\"/explore\"\n            logo={<MapIcon />}\n          />\n          <MiddleDivider />\n          <h3>Quels sont les arbres qui vous entourent ?</h3>\n          <FloatingLink\n            text=\"Utiliser ma position\"\n            variant=\"outlined\"\n            logo={<LocationOn />}\n            to={{ pathname: \"/around-me\", state: this.state }}\n          />\n          <AddressForm\n            placeholder=\"Ou plutôt à cette adresse\"\n            onChange={this.handleAddressChange}\n            onEnterDown={this.onEnterDown}\n            value={this.state.address}\n          />\n        </main>\n        <footer>\n          <RegularLink\n            className=\"inner\"\n            text=\"Code\"\n            href={\"https://github.com/hippolytej/tree-map\"}\n          />\n          <RegularLink\n            text=\"Coolitude\"\n            href={\"https://www.arbres.org/actualite.html\"}\n          />\n          <RegularLink\n            text=\"Data\"\n            href={\n              \"https://opendata.paris.fr/explore/dataset/les-arbres/information/\"\n            }\n          />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Layer, Feature } from \"react-mapbox-gl\";\n\nclass TreeLayer extends Component {\n  render() {\n    const treeIds = this.props.treeIds;\n    const treeArray = this.props.treeArray;\n    const color = this.props.color;\n    const markerType = this.props.markerType;\n    return (\n      <Layer\n        type={markerType}\n        id={this.props.treeType}\n        layout={markerType === \"symbol\" ? { \"icon-image\": \"billy\" } : undefined}\n        paint={\n          markerType === \"circle\"\n            ? { \"circle-radius\": 7, \"circle-color\": color }\n            : undefined\n        }\n      >\n        {treeIds.map((id) => (\n          <Feature\n            onMouseEnter={this.props.onTreeHover.bind(this, id)}\n            onMouseLeave={this.props.onTreeEndHover.bind(this)}\n            coordinates={treeArray[id].geometry.coordinates}\n            onClick={this.props.onTreeClick.bind(null, id)}\n            key={id}\n          />\n        ))}\n      </Layer>\n    );\n  }\n}\n\nexport default TreeLayer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nfunction PopUpButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={props.onClick}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nPopUpButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PopUpButton);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popup } from \"react-mapbox-gl\";\nimport PopUpButton from \"./button\";\nimport { isMobile } from \"react-device-detect\";\n\nclass TreePopUp extends Component {\n  render() {\n    var hoveredTree = this.props.hoveredTree;\n    const onCloseButtonClick = this.props.onCloseButtonClick;\n    const onInfoButtonClick = this.props.onInfoButtonClick;\n    const isClicked = this.props.isClicked;\n    const long = hoveredTree.geometry.coordinates[0];\n    const lat = hoveredTree.geometry.coordinates[1];\n    const cityMapperLink = `https://citymapper.com/directions?endcoord=${lat}%2C${long}&endname=Arbre%20Remarquable`;\n    return (\n      <Popup\n        key={hoveredTree.recordid}\n        coordinates={hoveredTree.geometry.coordinates}\n        offset={15}\n        // style={{maxWidth: 200, minWidth: 200}}\n      >\n        <div style={{ overflowX: \"auto\" }}>\n          <h3\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              marginTop: 5,\n              marginBottom: 5,\n            }}\n          >\n            {hoveredTree.fields.libellefrancais}\n          </h3>\n          <table style={{ width: \"100%\" }}>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Genre\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.genre}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Espèce\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.espece}\n                </td>\n              </tr>\n              {\"dateplantation\" in hoveredTree.fields ? (\n                <tr>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      fontWeight: \"medium\",\n                    }}\n                  >\n                    Planté en\n                  </td>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {hoveredTree.fields.dateplantation.substr(0, 4)}\n                  </td>\n                </tr>\n              ) : null}\n            </tbody>\n          </table>\n          {isClicked || isMobile ? (\n            <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n              {this.props.getMeThere ? (\n                <a\n                  href={cityMapperLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    src=\"https://static.citymapper.com/img/embed/GetMeThere_Citymapper.png\"\n                    alt=\"Get directions with Citymapper\"\n                  />\n                </a>\n              ) : null}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PopUpButton\n                  onClick={onInfoButtonClick}\n                  text=\"Infos\"\n                ></PopUpButton>\n                <PopUpButton\n                  onClick={onCloseButtonClick}\n                  text=\"Fermer\"\n                ></PopUpButton>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </Popup>\n    );\n  }\n}\n\nTreePopUp.propTypes = {\n  onInfoButtonClick: PropTypes.func.isRequired,\n};\n\nexport default TreePopUp;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = (theme) => ({\n  progress: {\n    marginLeft: 20,\n    marginRight: 25,\n    marginTop: 20,\n    width: \"40\",\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"primary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React from \"react\";\nimport CircularIndeterminate from \"./progress\";\n\nclass ImageWithStatusText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { imageLoaded: false };\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageLoaded: true });\n    console.log(\"LOADED\", this.state);\n  }\n\n  handleImageErrored() {\n    this.setState({ imageLoaded: false });\n  }\n\n  componentDidMount = () => {\n    this.timerHandle = setTimeout(() => {\n      this.setState({ imageLoaded: true });\n      this.timerHandle = false;\n    }, 3000);\n  };\n\n  componentWillUnmount = () => {\n    if (this.timerHandle) {\n      clearTimeout(this.timerHandle);\n      this.timerHandle = false;\n    }\n  };\n\n  render() {\n    const imageLoaded = this.state.imageLoaded;\n    const imageUrl = this.props.imageUrl;\n    return (\n      <div>\n        <img\n          src={imageUrl}\n          onLoad={this.handleImageLoaded.bind(this)}\n          onError={this.handleImageErrored.bind(this)}\n          alt=\"\"\n          style={this.props.style}\n        />\n        {imageLoaded ? null : <CircularIndeterminate />}\n      </div>\n    );\n  }\n}\n\nexport default ImageWithStatusText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// import SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport ImageWithStatusText from \"./image\";\nimport { isMobile } from \"react-device-detect\";\n\nconst styles = {\n  mobileContent: { maxHeight: \"80vh\" },\n  treeImg: {\n    height: \"20vh\",\n    display: \"inlineBlock\",\n    float: \"left\",\n  },\n  wikiRow: {\n    width: \"90%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 15,\n  },\n  wikiTextContainer: {\n    width: \"90%\",\n    bottom: 10,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    textAlign: \"left\",\n    display: \"flex\",\n    alignItems: \"center\",\n    overflow: \"scroll\",\n  },\n};\n\nclass TemporaryDrawer extends React.Component {\n  wikiContent(classes, props) {\n    return (\n      <div\n        style={{\n          maxWidth: 450,\n        }}\n        tabIndex={0}\n        role=\"button\"\n        onClick={props.toggleDrawer}\n        onKeyDown={props.toggleDrawer}\n      >\n        <div className={classes.wikiRow}>\n          {props.treeName}\n          <ImageWithStatusText\n            imageUrl={props.thumbnailUrl}\n            altText={props.treeName}\n          />\n        </div>\n        <div className={classes.wikiTextContainer}>\n          <p style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            {props.wikiDesc}\n          </p>\n        </div>\n      </div>\n    );\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Drawer\n          anchor={isMobile ? \"bottom\" : \"left\"}\n          open={this.props.openDrawer}\n          onClose={this.props.toggleDrawer}\n        >\n          {this.wikiContent(classes, this.props)}\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);\n","import * as materialColors from \"@material-ui/core/colors/\";\nconst { common, grey, blueGrey, ...colors } = materialColors;\n\nfunction shuffle(array) {\n  var tmp,\n    current,\n    top = array.length;\n\n  if (top)\n    while (--top) {\n      current = Math.floor(Math.random() * (top + 1));\n      tmp = array[current];\n      array[current] = array[top];\n      array[top] = tmp;\n    }\n\n  return array;\n}\n\nfunction getColors() {\n  var colorNames = Object.keys(colors);\n  var shuffledColorNames = shuffle(colorNames);\n  var allColors = [];\n  for (var intensity of [\n    500,\n    700,\n    300,\n    900,\n    \"A400\",\n    \"A200\",\n    \"A700\",\n    \"A100\",\n    600,\n    200,\n    100,\n    50,\n  ]) {\n    for (var colorName of shuffledColorNames) {\n      allColors.push(colors[colorName][intensity]);\n    }\n  }\n  return allColors;\n}\n\nconst allColors = getColors();\n\nexport async function remarkableParisData() {\n  var ids = [];\n  const response = await fetch(\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=arbresremarquablesparis&rows=2000\"\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n  }\n  return this.setState(\n    {\n      treeArray: responseJson.records,\n      nbTrees: maxNbTrees,\n      treeIds: ids,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n\nexport async function parisData(latitude, longitude, radius) {\n  console.log(\"api call lat\", latitude);\n  console.log(\"api call long\", longitude);\n  var ids = [];\n  var urlBase =\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=les-arbres&q=&facet=typeemplacement&facet=domanialite&facet=arrondissement&facet=libellefrancais&facet=genre&facet=espece&facet=varieteoucultivar&facet=circonferenceencm&facet=hauteurenm&facet=stadedeveloppement&facet=remarquable&geofilter.distance=\";\n  const response = await fetch(\n    `${urlBase}${latitude}%2C${longitude}%2C${radius}&rows=2000`\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  var treeNamesDict = {};\n  var uniqueLibelleCount = 0;\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n    var libelle = responseJson.records[i].fields.libellefrancais;\n    if (libelle in treeNamesDict) {\n      treeNamesDict[libelle][\"ids\"].push(i);\n    } else {\n      treeNamesDict[libelle] = {\n        ids: [i],\n        color: allColors[uniqueLibelleCount],\n      };\n      uniqueLibelleCount++;\n    }\n  }\n\n  return this.setState(\n    {\n      treeArray: responseJson.records,\n      treeNamesDict: treeNamesDict,\n      nbTrees: maxNbTrees,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n","export async function wikiData(keyword) {\n  var safeKeyword = keyword.split(\" \").join(\"_\");\n  console.log(\"Safe Keyword: \", safeKeyword);\n  var urlBase = \"https://fr.wikipedia.org/w/api.php?format=json&origin=*\";\n  // First search for a page, get best result, get the title of the best result\n  var bestResultTitle = \"\";\n  var bestResultId = 0;\n  try {\n    const searchResponse = await fetch(\n      `${urlBase}&action=query&list=search&srsearch=${safeKeyword}`\n    );\n    // `${urlBase}&action=opensearch&search=${safeGenre}+incategory:Arbre&redirects=resolve`);\n    const responseJson = await searchResponse.json();\n    console.log(\"Search response Json\", responseJson);\n    bestResultTitle = await responseJson.query.search[0].title;\n    bestResultId = await responseJson.query.search[0].pageid;\n    console.log(\"Best result\", bestResultTitle);\n  } catch (error) {\n    console.log(\"search error\", error);\n  }\n\n  var desc = \"\";\n  try {\n    const descQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${bestResultTitle}`\n    );\n    const descQueryJson = await descQueryResponse.json();\n    console.log(\"descQuery Json\", descQueryJson);\n    const descPages = await descQueryJson.query.pages;\n    console.log(\"Pages\", descPages);\n    desc = await descPages[Object.keys(descPages)[0]].extract;\n    // console.log(\"desc\", desc);\n  } catch (error) {\n    console.log(\"desc error\", error);\n  }\n\n  // Then query the best result's page :)\n  var thumbnail = \"\";\n  try {\n    const thumbQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=pageimages&titles=${bestResultTitle}&pithumbsize=200`\n    );\n    const thumbQueryJson = await thumbQueryResponse.json();\n    console.log(\"thumbQuery Json\", thumbQueryJson);\n    thumbnail = await thumbQueryJson.query.pages[bestResultId].thumbnail.source;\n    console.log(\"Thumbnail\", thumbnail);\n  } catch (error) {\n    console.log(\"thumbnail error\", error);\n  }\n\n  return this.setState(\n    {\n      wikiDesc: desc,\n      thumbnailUrl: thumbnail,\n    },\n    function () {\n      console.log(\"wikiData\", this.state.thumbnailUrl);\n    }\n  );\n}\n","import { isMobile } from \"react-device-detect\";\nimport { wikiData } from \"../utils/wikiData\";\nimport { GeolocateControl } from \"mapbox-gl\";\n\nexport function onTreeHover(hoveredTreeID, { map }) {\n  map.getCanvas().style.cursor = \"pointer\";\n  this.setState({\n    hoveredTreeID:\n      this.state.clickedTreeID || this.state.clickedTreeID === 0\n        ? \"\"\n        : hoveredTreeID,\n  });\n  if (isMobile) {\n    this.setState({ clickedTreeID: hoveredTreeID });\n  }\n}\n\nexport function onTreeEndHover({ map }) {\n  map.getCanvas().style.cursor = \"\";\n  this.setState({ hoveredTreeID: \"\" });\n}\n\nexport function onTreeClick(hoveredTreeID) {\n  this.setState({\n    hoveredTreeID: hoveredTreeID,\n    clickedTreeID: hoveredTreeID,\n  });\n}\n\nexport function onInfoButtonClick() {\n  console.log(\"CLICKED\");\n  this.setState({\n    openDrawer: true,\n  });\n  var treeId = this.state.hoveredTreeID\n    ? this.state.hoveredTreeID\n    : this.state.clickedTreeID;\n  var genre = this.state.treeArray[treeId].fields.genre;\n  var espece = this.state.treeArray[treeId].fields.espece;\n  var keyword = genre + \"_\" + espece;\n  wikiData.apply(this, [keyword]);\n}\n\nexport function onCloseButtonClick() {\n  this.setState({\n    hoveredTreeID: \"\",\n    clickedTreeID: \"\",\n  });\n}\n\nexport function toggleDrawer() {\n  this.setState({\n    openDrawer: false,\n    thumbnailUrl: \"\",\n    wikiDesc: \"\",\n  });\n}\n\nexport function onMapLoad(map) {\n  map.addControl(\n    new GeolocateControl({\n      positionOptions: { enableHighAccuracy: true },\n      trackUserLocation: false,\n    })\n  );\n}\n","import React, { Component } from \"react\";\nimport { token, style } from \"../config.json\";\n// Components\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport TreeLayer from \"./treeLayer\";\nimport TreePopUp from \"./treePopUp\";\nimport { RegularLink } from \"./linkbuttons\";\nimport TemporaryDrawer from \"./wikiDrawer\";\n// Utils\nimport { remarkableParisData } from \"../utils/parisData\";\nimport * as mapUtils from \"../utils/map_utils\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 11,\n  maxZoom: 16,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst flyToOptions = {\n  speed: 0.6,\n};\n\nclass RemarkableTreesMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeArray: \"\",\n      nbTrees: 0,\n      treeIds: [],\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      clickedTreeName: \"\",\n      mapCenter: [2.3466110229492188, 48.85613168160397],\n      zoom: [12],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n    this.onTreeHover = mapUtils.onTreeHover.bind(this);\n    this.onTreeEndHover = mapUtils.onTreeEndHover.bind(this);\n    this.onTreeClick = mapUtils.onTreeClick.bind(this);\n    this.onInfoButtonClick = mapUtils.onInfoButtonClick.bind(this);\n    this.onCloseButtonClick = mapUtils.onCloseButtonClick.bind(this);\n    this.toggleDrawer = mapUtils.toggleDrawer.bind(this);\n    this.onMapLoad = mapUtils.onMapLoad.bind(this);\n    this.treeData = remarkableParisData.bind(this);\n  }\n\n  componentDidMount() {\n    this.treeData();\n  }\n\n  render() {\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    const mapCenter = this.state.mapCenter;\n    const zoom = this.state.zoom;\n    var bounds = [\n      [2.14402, 48.772687],\n      [2.529051, 48.969946],\n    ];\n    return (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n          maxBounds={bounds}\n        >\n          <RegularLink text=\"Accueil\" variant=\"outlined\" to=\"/\">\n            Home\n          </RegularLink>\n          <TreeLayer\n            onTreeHover={this.onTreeHover}\n            onTreeEndHover={this.onTreeEndHover}\n            treeIds={this.state.treeIds}\n            treeArray={this.state.treeArray}\n            onTreeClick={this.onTreeClick}\n            markerType=\"symbol\"\n          />\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeArray[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              getMeThere={true}\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n        </Map>\n        <TemporaryDrawer\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          treeName={this.state.clickedTreeName}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RemarkableTreesMap;\n","import React, { Component } from \"react\";\nimport RemarkableTreesMap from \"./remarkableTreesMap\";\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div>\n        <RemarkableTreesMap />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","export async function getCoordinates(address, token) {\n  const response = await fetch(\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?proximity=2.350699,48.852737&access_token=${token}`\n  ); // $bbox=48.964581,2.112012,48.745023,2.581812\n  const responseJson = await response.json();\n\n  return this.setState({\n    longitude: responseJson.features[0].center[0],\n    latitude: responseJson.features[0].center[1],\n    locationAvailable: true,\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nfunction ColorDot(id, name, color) {\n  return (\n    <tr style={{ verticalAlign: \"middle\", textAlign: \"left\" }}>\n      <td>\n        <span\n          style={{\n            height: 16,\n            width: 16,\n            backgroundColor: color,\n            borderRadius: 50,\n            display: \"inline-block\",\n            marginRight: 20,\n            verticalAlign: \"middle\",\n          }}\n        ></span>\n      </td>\n      <td>{name}</td>\n    </tr>\n  );\n}\n\nfunction legendContent(nbTrees, treeNamesDict) {\n  return (\n    <div>\n      {nbTrees ? (\n        <table\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        >\n          {Object.keys(treeNamesDict).map((item, i) =>\n            ColorDot(i, item, treeNamesDict[item][\"color\"])\n          )}\n        </table>\n      ) : (\n        \"Pas d'arbres par ici :(\"\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  root: {\n    width: \"100%\",\n  },\n  panel: {\n    background: \"transparent\",\n    border: 0,\n    boxShadow: \"none\",\n  },\n  expansionPanelSummaryExpandIcon: {\n    right: \"auto\",\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  pute: {\n    width: \"100%\",\n    alignItems: \"center\",\n    display: \"inline-block\",\n    textAlign: \"center\",\n  },\n};\n\nfunction LegendExpansionPanel(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded={true} className={classes.panel}>\n        <ExpansionPanelSummary\n          classes={{\n            expandIcon: classes.expansionPanelSummaryExpandIcon,\n          }}\n          expandIcon={<ExpandMoreIcon />}\n        ></ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          <div className={classes.pute}>\n            {legendContent(props.nbTrees, props.treeNamesDict)}\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nLegendExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LegendExpansionPanel);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { token, style } from \"../config.json\";\n// Components\nimport TreePopUp from \"./treePopUp\";\nimport { RegularLink } from \"./linkbuttons\";\nimport TemporaryDrawer from \"./wikiDrawer\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport TreeLayer from \"./treeLayer\";\nimport CircularIndeterminate from \"./progress\";\n// Utils\nimport { getCoordinates } from \"../utils/geocode\";\nimport { parisData } from \"../utils/parisData\";\nimport * as mapUtils from \"../utils/map_utils\";\nimport LegendExpansionPanel from \"./legendPanel\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 14,\n  maxZoom: 20,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst radius = 200;\nconst flyToOptions = {\n  speed: 0,\n};\n\nclass NearbyTreesMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationAvailable: false,\n      treeArray: [],\n      treeNamesDict: {},\n      nbTrees: 0,\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      address: this.props.address ? this.props.address : \"\",\n      latitude: 0,\n      longitude: 0,\n      zoom: [17],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n    this.onTreeHover = mapUtils.onTreeHover.bind(this);\n    this.onTreeEndHover = mapUtils.onTreeEndHover.bind(this);\n    this.onTreeClick = mapUtils.onTreeClick.bind(this);\n    this.onInfoButtonClick = mapUtils.onInfoButtonClick.bind(this);\n    this.onCloseButtonClick = mapUtils.onCloseButtonClick.bind(this);\n    this.toggleDrawer = mapUtils.toggleDrawer.bind(this);\n    this.onMapLoad = mapUtils.onMapLoad.bind(this);\n  }\n\n  locationFound = (position) => {\n    this.setState(\n      {\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude,\n        locationAvailable: true,\n      },\n      () => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      }\n    );\n  };\n\n  errorHandler = (err) => {\n    if (err.code === 1) {\n      alert(\"Error: Access is denied!\");\n    } else if (err.code === 2) {\n      alert(\"Error: Position is unavailable!\");\n    }\n  };\n\n  getUserPosition() {\n    if (this.state.address) {\n      getCoordinates.apply(this, [this.state.address, token]).then(() => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      });\n    } else if (navigator.geolocation) {\n      var options = { timeout: 60000 };\n      navigator.geolocation.getCurrentPosition(\n        this.locationFound,\n        this.errorHandler,\n        options\n      );\n    } else {\n      alert(\n        \"Sorry, browser does not support geolocation and no address was supplied\"\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.locationAvailable) {\n      parisData.apply(this, [\n        this.state.latitude,\n        this.state.longitude,\n        radius,\n      ]);\n    } else {\n      this.getUserPosition.apply(this);\n    }\n  }\n\n  render() {\n    const mapCenter = [this.state.longitude, this.state.latitude];\n    const zoom = this.state.zoom;\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    var bounds = [\n      [2.14402, 48.772687],\n      [2.529051, 48.969946],\n    ];\n    return this.state.locationAvailable ? (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n          maxBounds={bounds}\n        >\n          <LegendExpansionPanel\n            nbTrees={this.state.nbTrees}\n            treeNamesDict={this.state.treeNamesDict}\n          />\n          {Object.keys(this.state.treeNamesDict).map((item, i) => (\n            <TreeLayer\n              key={i}\n              treeType={item}\n              onTreeHover={this.onTreeHover}\n              onTreeEndHover={this.onTreeEndHover}\n              treeIds={this.state.treeNamesDict[item][\"ids\"]}\n              treeArray={this.state.treeArray}\n              onTreeClick={this.onTreeClick}\n              markerType=\"circle\"\n              color={this.state.treeNamesDict[item][\"color\"]}\n            />\n          ))}\n\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeArray[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              getMeThere={false}\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n          <div style={{ position: \"absolute\", top: \"5px\" }}>\n            <RegularLink\n              text=\"Accueil\"\n              variant=\"outlined\"\n              to=\"/\"\n              syle={{ top: 300 }}\n            >\n              Home\n            </RegularLink>\n          </div>\n        </Map>\n        <TemporaryDrawer\n          content=\"wiki\"\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    ) : (\n      <CircularIndeterminate />\n    );\n  }\n}\n\nexport default NearbyTreesMap;\n","import React, { Component } from \"react\";\nimport NearbyTreesMap from \"./nearbyTreesMap\";\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div>\n        <NearbyTreesMap\n          address={\n            this.props.location.state ? this.props.location.state.address : \"\"\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>404</h1>\n        </div>\n        <p>Wow c'est la hess ici ou quoi ?</p>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport './index.css'\nimport HomePage from './components/homepage';\nimport Explore from './components/explore';\nimport AroundMe from './components/aroundMe';\nimport NotFound from './notfound';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <HashRouter>\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/around-me\" component={AroundMe} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </HashRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}