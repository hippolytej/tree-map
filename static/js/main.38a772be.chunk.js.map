{"version":3,"sources":["components/linkbutton.jsx","components/addressForm.jsx","components/homepage.jsx","components/treeLayer.jsx","components/button.jsx","components/treePopUp.jsx","components/progress.jsx","components/image.jsx","components/drawer.jsx","utils/parisData.jsx","utils/wikiData.jsx","utils/map_utils.jsx","components/remarkableTreesMap.jsx","components/explore.jsx","utils/geocode.jsx","components/nearbyTreesMap.jsx","components/aroundMe.jsx","notfound.js","serviceWorker.js","index.js"],"names":["withStyles","theme","button","margin","props","classes","react_default","a","createElement","Button_default","size","variant","className","component","to","Link","undefined","href","text","AddressForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","onEnterDown","event","target","value","onChange","e","keyCode","root","noValidate","autoComplete","TextField_default","id","label","type","onKeyDown","fullWidth","React","Component","HomePage","state","address","handleAddressChange","setState","history","push","pathname","src","alt","height","linkbutton","addressForm","style","paddingTop","paddingBottom","TreeLayer","treeIds","treeArray","color","markerType","lib_esm","treeType","layout","icon-image","paint","circle-radius","circle-color","map","onMouseEnter","onTreeHover","onMouseLeave","onTreeEndHover","coordinates","geometry","onClick","onTreeClick","key","TreePopUp","hoveredTree","onCloseButtonClick","onInfoButtonClick","isClicked","long","lat","cityMapperLink","concat","recordid","offset","overflowX","fontFamily","fontSize","marginTop","marginBottom","fields","libellefrancais","width","fontWeight","textAlign","genre","espece","dateplantation","substr","isMobile","marginLeft","marginRight","getMeThere","rel","display","flexDirection","justifyContent","components_button","progress","spacing","unit","CircularProgress_default","ImageWithStatusText","imageLoaded","console","log","_this2","setTimeout","imageUrl","onLoad","handleImageLoaded","onError","handleImageErrored","TemporaryDrawer","treeName","Drawer_default","anchor","open","openDrawer","onClose","toggleDrawer","tabIndex","role","wikiRow","components_image","thumbnailUrl","altText","wikiTextContainer","wikiDesc","list","fullList","treeImg","float","_callee","ids","response","responseJson","maxNbTrees","i","regenerator_default","wrap","_context","prev","next","fetch","sent","json","Math","min","parameters","rows","nhits","abrupt","records","nbTrees","stop","parisData","_x","_x2","_x3","_parisData","apply","arguments","_callee2","latitude","longitude","radius","treeNamesDict","libelle","_context2","random","toString","keyword","safeKeyword","urlBase","bestResultTitle","bestResultId","searchResponse","desc","descQueryResponse","descQueryJson","descPages","thumbnail","thumbQueryResponse","thumbQueryJson","split","join","query","search","title","pageid","t0","pages","keys","extract","t1","source","t2","hoveredTreeID","_ref","getCanvas","cursor","clickedTreeID","_ref2","treeId","_wikiData","onMapLoad","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","Map","ReactMapboxGl","minZoom","maxZoom","accessToken","token","mapStyle","flyToOptions","speed","RemarkableTreesMap","clickedTreeName","mapCenter","zoom","wikiTreeData","mapUtils","treeData","_remarkableParisData","onStyleLoad","center","containerStyle","treeLayer","treePopUp","drawer","leftDrawer","Explore","remarkableTreesMap","features","locationAvailable","NearbyTreesMap","locationFound","position","coords","errorHandler","err","code","alert","_getCoordinates","then","navigator","geolocation","getCurrentPosition","timeout","getUserPosition","_this3","nearbyTreesMap_Map","top","right","listStyle","item","name","backgroundColor","borderRadius","paddingLeft","nearbyTreesMap","location","NotFound","Boolean","window","hostname","match","routing","HashRouter","Switch","Route","exact","path","AroundMe","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a772be.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nfunction LinkButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant={props.variant}\n        className={classes.button}\n        component={props.to ? Link : undefined}\n        to={props.to}\n        href={props.href}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nLinkButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LinkButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nclass AddressForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.onEnterDown = this.onEnterDown.bind(this);\n  }\n\n  handleChange(event) {\n    const text = event.target.value;\n    this.props.onChange(text);\n  }\n\n  onEnterDown(e) {\n    if (e.keyCode === 13) {\n      this.props.onEnterDown();\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"address-basic\"\n          label=\"A cette adresse\"\n          type=\"search\"\n          onChange={this.handleChange}\n          onKeyDown={this.onEnterDown}\n          value={this.props.value}\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n        />\n      </form>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddressForm);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport LinkButton from \"./linkbutton\";\nimport AddressForm from \"./addressForm\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\",\n    };\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.onEnterDown = this.onEnterDown.bind(this);\n  }\n\n  handleAddressChange(value) {\n    this.setState({ address: value });\n  }\n\n  onEnterDown() {\n    this.props.history.push({ pathname: \"/around-me\", state: this.state });\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <img src=\"/logo_canopee_v0.001.png\" alt=\"logo\" height=\"200\" />\n          <h1>canopee</h1>\n          <p>Votre guide arboricole</p>\n        </header>\n        <main>\n          <h3>Explorez le Paris des arbres remarquables</h3>\n          <LinkButton text=\"Carte\" variant=\"outlined\" to=\"/explore\" />\n          <h3>Faites conaissance avec les arbres qui vous entourent</h3>\n          <AddressForm\n            onChange={this.handleAddressChange}\n            onEnterDown={this.onEnterDown}\n            value={this.state.address}\n          />\n          <p style={{ paddingTop: 0, paddingBottom: 0 }}>ou bien</p>\n          <LinkButton\n            text=\"Autour de vous\"\n            variant=\"outlined\"\n            to={{ pathname: \"/around-me\", state: this.state }}\n          />\n        </main>\n        <footer>\n          <LinkButton\n            className=\"inner\"\n            text=\"Code\"\n            href={\"https://github.com/hippolytej/tree-map\"}\n          />\n          <LinkButton\n            text=\"Coolitude\"\n            href={\"https://www.arbres.org/actualite.html\"}\n          />\n          <LinkButton\n            text=\"Data\"\n            href={\n              \"https://opendata.paris.fr/explore/dataset/les-arbres/information/\"\n            }\n          />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport { Layer, Feature } from \"react-mapbox-gl\";\n\nclass TreeLayer extends Component {\n  render() {\n    const treeIds = this.props.treeIds;\n    const treeArray = this.props.treeArray;\n    const color = this.props.color;\n    const markerType = this.props.markerType;\n    return (\n      <Layer\n        type={markerType}\n        id={this.props.treeType}\n        layout={markerType === \"symbol\" ? { \"icon-image\": \"billy\" } : undefined}\n        paint={\n          markerType === \"circle\"\n            ? { \"circle-radius\": 7, \"circle-color\": color }\n            : undefined\n        }\n      >\n        {treeIds.map((id) => (\n          <Feature\n            onMouseEnter={this.props.onTreeHover.bind(this, id)}\n            onMouseLeave={this.props.onTreeEndHover.bind(this)}\n            coordinates={treeArray[id].geometry.coordinates}\n            onClick={this.props.onTreeClick.bind(null, id)}\n            key={id}\n          />\n        ))}\n      </Layer>\n    );\n  }\n}\n\nexport default TreeLayer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = (theme) => ({\n  button: {\n    margin: 5,\n  },\n});\n\nfunction PopUpButton(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        className={classes.button}\n        onClick={props.onClick}\n      >\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n\nPopUpButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PopUpButton);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popup } from \"react-mapbox-gl\";\nimport PopUpButton from \"./button\";\nimport { isMobile } from \"react-device-detect\";\n\nclass TreePopUp extends Component {\n  render() {\n    var hoveredTree = this.props.hoveredTree;\n    const onCloseButtonClick = this.props.onCloseButtonClick;\n    const onInfoButtonClick = this.props.onInfoButtonClick;\n    const isClicked = this.props.isClicked;\n    const long = hoveredTree.geometry.coordinates[0];\n    const lat = hoveredTree.geometry.coordinates[1];\n    const cityMapperLink = `https://citymapper.com/directions?endcoord=${lat}%2C${long}&endname=Arbre%20Remarquable`;\n    return (\n      <Popup\n        key={hoveredTree.recordid}\n        coordinates={hoveredTree.geometry.coordinates}\n        offset={15}\n        // style={{maxWidth: 200, minWidth: 200}}\n      >\n        <div style={{ overflowX: \"auto\" }}>\n          <h3\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              marginTop: 5,\n              marginBottom: 5,\n            }}\n          >\n            {hoveredTree.fields.libellefrancais}\n          </h3>\n          <table style={{ width: \"100%\" }}>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Genre\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.genre}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    fontWeight: \"medium\",\n                  }}\n                >\n                  Espèce\n                </td>\n                <td\n                  style={{\n                    fontFamily: \"Roboto\",\n                    fontSize: 14,\n                    textAlign: \"right\",\n                  }}\n                >\n                  {hoveredTree.fields.espece}\n                </td>\n              </tr>\n              {\"dateplantation\" in hoveredTree.fields ? (\n                <tr>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      fontWeight: \"medium\",\n                    }}\n                  >\n                    Planté en\n                  </td>\n                  <td\n                    style={{\n                      fontFamily: \"Roboto\",\n                      fontSize: 14,\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {hoveredTree.fields.dateplantation.substr(0, 4)}\n                  </td>\n                </tr>\n              ) : null}\n            </tbody>\n          </table>\n          {isClicked || isMobile ? (\n            <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n              {this.props.getMeThere ? (\n                <a\n                  href={cityMapperLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    src=\"https://static.citymapper.com/img/embed/GetMeThere_Citymapper.png\"\n                    alt=\"Get directions with Citymapper\"\n                  />\n                </a>\n              ) : null}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PopUpButton\n                  onClick={onInfoButtonClick}\n                  text=\"Infos\"\n                ></PopUpButton>\n                <PopUpButton\n                  onClick={onCloseButtonClick}\n                  text=\"Fermer\"\n                ></PopUpButton>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </Popup>\n    );\n  }\n}\n\nTreePopUp.propTypes = {\n  onInfoButtonClick: PropTypes.func.isRequired,\n};\n\nexport default TreePopUp;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = (theme) => ({\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} color=\"secondary\" />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React from \"react\";\nimport CircularIndeterminate from \"./progress\";\n\nclass ImageWithStatusText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { imageLoaded: false };\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageLoaded: true });\n    console.log(\"LOADED\", this.state);\n  }\n\n  handleImageErrored() {\n    this.setState({ imageLoaded: false });\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ imageLoaded: true }), 1000);\n  }\n\n  render() {\n    const imageLoaded = this.state.imageLoaded;\n    const imageUrl = this.props.imageUrl;\n    return (\n      <div>\n        <img\n          src={imageUrl}\n          onLoad={this.handleImageLoaded.bind(this)}\n          onError={this.handleImageErrored.bind(this)}\n          alt=\"\"\n          style={{ paddingTop: 10 }}\n        />\n        {imageLoaded ? null : <CircularIndeterminate />}\n      </div>\n    );\n  }\n}\n\nexport default ImageWithStatusText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ImageWithStatusText from \"./image\";\nimport { isMobile } from \"react-device-detect\";\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  treeImg: {\n    marginTop: 10,\n    marginBottom: 10,\n    marginRight: 10,\n    width: 100,\n    display: \"inlineBlock\",\n    float: \"left\",\n  },\n  wikiRow: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  wikiTextContainer: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n};\n\nclass TemporaryDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n    var treeName = this.props.treeName;\n    return (\n      <div>\n        <Drawer\n          anchor={isMobile ? \"bottom\" : \"left\"}\n          open={this.props.openDrawer}\n          onClose={this.props.toggleDrawer}\n        >\n          <div\n            style={{ width: isMobile ? \"auto\" : 350 }}\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.props.toggleDrawer}\n            onKeyDown={this.props.toggleDrawer}\n          >\n            <div className={classes.wikiRow}>\n              {treeName}\n              <ImageWithStatusText\n                imageUrl={this.props.thumbnailUrl}\n                altText={treeName}\n              />\n            </div>\n            <div className={classes.wikiTextContainer}>\n              <p>{this.props.wikiDesc}</p>\n            </div>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);\n","export async function remarkableParisData() {\n  var ids = [];\n  const response = await fetch(\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=arbresremarquablesparis&rows=200\"\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n  }\n  return this.setState(\n    {\n      treeArray: responseJson.records,\n      nbTrees: maxNbTrees,\n      treeIds: ids,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n\nexport async function parisData(latitude, longitude, radius) {\n  console.log(\"api call lat\", latitude);\n  console.log(\"api call long\", longitude);\n  var ids = [];\n  var urlBase =\n    \"https://opendata.paris.fr/api/records/1.0/search/?dataset=les-arbres&q=&facet=typeemplacement&facet=domanialite&facet=arrondissement&facet=libellefrancais&facet=genre&facet=espece&facet=varieteoucultivar&facet=circonferenceencm&facet=hauteurenm&facet=stadedeveloppement&facet=remarquable&geofilter.distance=\";\n  const response = await fetch(\n    `${urlBase}${latitude}%2C${longitude}%2C${radius}&rows=200`\n  );\n  const responseJson = await response.json();\n  var maxNbTrees = Math.min(responseJson.parameters.rows, responseJson.nhits);\n  var treeNamesDict = {};\n  for (var i = 0; i < maxNbTrees; i++) {\n    ids.push(i);\n    var libelle = responseJson.records[i].fields.libellefrancais;\n    if (libelle in treeNamesDict) {\n      treeNamesDict[libelle][\"ids\"].push(i);\n    } else {\n      treeNamesDict[libelle] = {\n        ids: [i],\n        color: \"#\" + (((1 << 24) * Math.random()) | 0).toString(16),\n      };\n    }\n  }\n\n  return this.setState(\n    {\n      treeArray: responseJson.records,\n      treeNamesDict: treeNamesDict,\n      nbTrees: maxNbTrees,\n    },\n    function () {\n      console.log(\"nb loaded trees\", this.state.nbTrees);\n    }\n  );\n}\n","export async function wikiData(keyword) {\n  var safeKeyword = keyword.split(\" \").join(\"_\");\n  console.log(\"Safe Keyword: \", safeKeyword);\n  var urlBase = \"https://fr.wikipedia.org/w/api.php?format=json&origin=*\";\n  // First search for a page, get best result, get the title of the best result\n  var bestResultTitle = \"\";\n  var bestResultId = 0;\n  try {\n    const searchResponse = await fetch(\n      `${urlBase}&action=query&list=search&srsearch=${safeKeyword}`\n    );\n    // `${urlBase}&action=opensearch&search=${safeGenre}+incategory:Arbre&redirects=resolve`);\n    const responseJson = await searchResponse.json();\n    console.log(\"Search response Json\", responseJson);\n    bestResultTitle = await responseJson.query.search[0].title;\n    bestResultId = await responseJson.query.search[0].pageid;\n    console.log(\"Best result\", bestResultTitle);\n  } catch (error) {\n    console.log(\"search error\", error);\n  }\n\n  var desc = \"\";\n  try {\n    const descQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${bestResultTitle}`\n    );\n    const descQueryJson = await descQueryResponse.json();\n    console.log(\"descQuery Json\", descQueryJson);\n    const descPages = await descQueryJson.query.pages;\n    console.log(\"Pages\", descPages);\n    desc = await descPages[Object.keys(descPages)[0]].extract;\n    // console.log(\"desc\", desc);\n  } catch (error) {\n    console.log(\"desc error\", error);\n  }\n\n  // Then query the best result's page :)\n  var thumbnail = \"\";\n  try {\n    const thumbQueryResponse = await fetch(\n      `${urlBase}&action=query&prop=pageimages&titles=${bestResultTitle}&pithumbsize=200`\n    );\n    const thumbQueryJson = await thumbQueryResponse.json();\n    console.log(\"thumbQuery Json\", thumbQueryJson);\n    thumbnail = await thumbQueryJson.query.pages[bestResultId].thumbnail.source;\n    console.log(\"Thumbnail\", thumbnail);\n  } catch (error) {\n    console.log(\"thumbnail error\", error);\n  }\n\n  return this.setState(\n    {\n      wikiDesc: desc,\n      thumbnailUrl: thumbnail,\n    },\n    function () {\n      console.log(\"wikiData\", this.state.thumbnailUrl);\n    }\n  );\n}\n","import React from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { wikiData } from \"../utils/wikiData\";\nimport { GeolocateControl } from \"mapbox-gl\";\n\nexport function ColorDot(id, name, color) {\n  return (\n    <li key={id}>\n      <span\n        style={{\n          height: 16,\n          width: 16,\n          backgroundColor: color,\n          borderRadius: 50,\n          display: \"inline-block\",\n        }}\n      >\n        <span style={{ paddingLeft: 30 }}>{name}</span>\n      </span>\n    </li>\n  );\n}\n\nexport function onTreeHover(hoveredTreeID, { map }) {\n  map.getCanvas().style.cursor = \"pointer\";\n  this.setState({\n    hoveredTreeID:\n      this.state.clickedTreeID || this.state.clickedTreeID === 0\n        ? \"\"\n        : hoveredTreeID,\n  });\n  if (isMobile) {\n    this.setState({ clickedTreeID: hoveredTreeID });\n  }\n}\n\nexport function onTreeEndHover({ map }) {\n  map.getCanvas().style.cursor = \"\";\n  this.setState({ hoveredTreeID: \"\" });\n}\n\nexport function onTreeClick(hoveredTreeID) {\n  this.setState({\n    hoveredTreeID: hoveredTreeID,\n    clickedTreeID: hoveredTreeID,\n  });\n}\n\nexport function onInfoButtonClick() {\n  console.log(\"CLICKED\");\n  this.setState({\n    openDrawer: true,\n  });\n  var treeId = this.state.hoveredTreeID\n    ? this.state.hoveredTreeID\n    : this.state.clickedTreeID;\n  var genre = this.state.treeArray[treeId].fields.genre;\n  var espece = this.state.treeArray[treeId].fields.espece;\n  var keyword = genre + \"_\" + espece;\n  wikiData.apply(this, [keyword]);\n}\n\nexport function onCloseButtonClick() {\n  this.setState({\n    hoveredTreeID: \"\",\n    clickedTreeID: \"\",\n  });\n}\n\nexport function toggleDrawer() {\n  this.setState({\n    openDrawer: false,\n    thumbnailUrl: \"\",\n    wikiDesc: \"\",\n  });\n}\n\nexport function onMapLoad(map) {\n  map.addControl(\n    new GeolocateControl({\n      positionOptions: { enableHighAccuracy: true },\n      trackUserLocation: false,\n    })\n  );\n}\n","import React, { Component } from \"react\";\nimport { token, style } from \"../config.json\";\n// Components\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport TreeLayer from \"./treeLayer\";\nimport TreePopUp from \"./treePopUp\";\nimport LinkButton from \"./linkbutton\";\nimport TemporaryDrawer from \"./drawer\";\n// Utils\nimport { remarkableParisData } from \"../utils/parisData\";\nimport * as mapUtils from \"../utils/map_utils\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 11,\n  maxZoom: 16,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst flyToOptions = {\n  speed: 0.6,\n};\n\nclass RemarkableTreesMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeArray: \"\",\n      nbTrees: 0,\n      treeIds: [],\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      clickedTreeName: \"\",\n      mapCenter: [2.3466110229492188, 48.85613168160397],\n      zoom: [12],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n    this.onTreeHover = mapUtils.onTreeHover.bind(this);\n    this.onTreeEndHover = mapUtils.onTreeEndHover.bind(this);\n    this.onTreeClick = mapUtils.onTreeClick.bind(this);\n    this.onInfoButtonClick = mapUtils.onInfoButtonClick.bind(this);\n    this.onCloseButtonClick = mapUtils.onCloseButtonClick.bind(this);\n    this.toggleDrawer = mapUtils.toggleDrawer.bind(this);\n    this.onMapLoad = mapUtils.onMapLoad.bind(this);\n    this.treeData = remarkableParisData.bind(this);\n  }\n\n  componentDidMount() {\n    this.treeData();\n  }\n\n  render() {\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    const mapCenter = this.state.mapCenter;\n    const zoom = this.state.zoom;\n    return (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n        >\n          <LinkButton text=\"Accueil\" variant=\"outlined\" to=\"/\">\n            Home\n          </LinkButton>\n          <TreeLayer\n            onTreeHover={this.onTreeHover}\n            onTreeEndHover={this.onTreeEndHover}\n            treeIds={this.state.treeIds}\n            treeArray={this.state.treeArray}\n            onTreeClick={this.onTreeClick}\n            markerType=\"symbol\"\n          />\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeArray[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              getMeThere={true}\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n        </Map>\n        <TemporaryDrawer\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          treeName={this.state.clickedTreeName}\n          leftDrawer={this.state.leftDrawer}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RemarkableTreesMap;\n","import React, { Component } from \"react\";\nimport RemarkableTreesMap from \"./remarkableTreesMap\";\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div>\n        <RemarkableTreesMap />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","export async function getCoordinates(address, token) {\n  const response = await fetch(\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?proximity=2.350699,48.852737&access_token=${token}`\n  ); // $bbox=48.964581,2.112012,48.745023,2.581812\n  const responseJson = await response.json();\n\n  return this.setState({\n    longitude: responseJson.features[0].center[0],\n    latitude: responseJson.features[0].center[1],\n    locationAvailable: true,\n  });\n}\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { token, style } from \"../config.json\";\n// Components\nimport TreePopUp from \"./treePopUp\";\nimport LinkButton from \"./linkbutton\";\nimport TemporaryDrawer from \"./drawer\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport TreeLayer from \"./treeLayer\";\nimport CircularIndeterminate from \"./progress\";\n// Utils\nimport { getCoordinates } from \"../utils/geocode\";\nimport { parisData } from \"../utils/parisData\";\nimport * as mapUtils from \"../utils/map_utils\";\n\nconst Map = ReactMapboxGl({\n  minZoom: 16,\n  maxZoom: 20,\n  accessToken: token,\n});\nconst mapStyle = style;\nconst radius = 100;\nconst flyToOptions = {\n  speed: 0,\n};\n\nclass NearbyTreesMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationAvailable: false,\n      treeArray: [],\n      treeNamesDict: {},\n      nbTrees: 0,\n      hoveredTreeID: \"\",\n      clickedTreeID: \"\",\n      address: this.props.address ? this.props.address : \"\",\n      latitude: 0,\n      longitude: 0,\n      zoom: [19],\n      openDrawer: false,\n      wikiTreeData: \"\",\n      thumbnailUrl: \"\",\n      wikiDesc: \"\",\n    };\n    this.onTreeHover = mapUtils.onTreeHover.bind(this);\n    this.onTreeEndHover = mapUtils.onTreeEndHover.bind(this);\n    this.onTreeClick = mapUtils.onTreeClick.bind(this);\n    this.onInfoButtonClick = mapUtils.onInfoButtonClick.bind(this);\n    this.onCloseButtonClick = mapUtils.onCloseButtonClick.bind(this);\n    this.toggleDrawer = mapUtils.toggleDrawer.bind(this);\n    this.onMapLoad = mapUtils.onMapLoad.bind(this);\n  }\n\n  locationFound = (position) => {\n    this.setState(\n      {\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude,\n        locationAvailable: true,\n      },\n      () => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      }\n    );\n  };\n\n  errorHandler = (err) => {\n    if (err.code === 1) {\n      alert(\"Error: Access is denied!\");\n    } else if (err.code === 2) {\n      alert(\"Error: Position is unavailable!\");\n    }\n  };\n\n  getUserPosition() {\n    if (this.state.address) {\n      getCoordinates.apply(this, [this.state.address, token]).then(() => {\n        parisData.apply(this, [\n          this.state.latitude,\n          this.state.longitude,\n          radius,\n        ]);\n      });\n    } else if (navigator.geolocation) {\n      var options = { timeout: 60000 };\n      navigator.geolocation.getCurrentPosition(\n        this.locationFound,\n        this.errorHandler,\n        options\n      );\n    } else {\n      alert(\n        \"Sorry, browser does not support geolocation and no address was supplied\"\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.locationAvailable) {\n      parisData.apply(this, [\n        this.state.latitude,\n        this.state.longitude,\n        radius,\n      ]);\n    } else {\n      this.getUserPosition.apply(this);\n    }\n  }\n\n  render() {\n    const mapCenter = [this.state.longitude, this.state.latitude];\n    const zoom = this.state.zoom;\n    const hoveredTreeID = this.state.hoveredTreeID;\n    const clickedTreeID = this.state.clickedTreeID;\n    return this.state.locationAvailable ? (\n      <div>\n        <Map\n          onStyleLoad={this.onMapLoad}\n          style={mapStyle}\n          center={mapCenter}\n          containerStyle={{ width: \"100vw\", height: \"100vh\" }}\n          flyToOptions={flyToOptions}\n          zoom={zoom}\n        >\n          <LinkButton text=\"Accueil\" variant=\"outlined\" to=\"/\">\n            Home\n          </LinkButton>\n          <div\n            style={{\n              position: \"fixed\",\n              top: 20,\n              right: 100,\n            }}\n          >\n            {this.state.nbTrees ? (\n              <ul style={{ listStyle: null }}>\n                {Object.keys(this.state.treeNamesDict).map((item, i) =>\n                  mapUtils.ColorDot(\n                    i,\n                    item,\n                    this.state.treeNamesDict[item][\"color\"]\n                  )\n                )}\n              </ul>\n            ) : (\n              \"Pas d'arbres par ici :(\"\n            )}\n          </div>\n          {Object.keys(this.state.treeNamesDict).map((item, i) => (\n            <TreeLayer\n              key={i}\n              treeType={item}\n              onTreeHover={this.onTreeHover}\n              onTreeEndHover={this.onTreeEndHover}\n              treeIds={this.state.treeNamesDict[item][\"ids\"]}\n              treeArray={this.state.treeArray}\n              onTreeClick={this.onTreeClick}\n              markerType=\"circle\"\n              color={this.state.treeNamesDict[item][\"color\"]}\n            />\n          ))}\n\n          {(hoveredTreeID ||\n            clickedTreeID ||\n            hoveredTreeID === 0 ||\n            clickedTreeID === 0) && (\n            <TreePopUp\n              isClicked={clickedTreeID || clickedTreeID === 0 ? 1 : 0}\n              hoveredTree={\n                this.state.treeArray[\n                  hoveredTreeID || hoveredTreeID === 0\n                    ? hoveredTreeID\n                    : clickedTreeID\n                ]\n              }\n              getMeThere={false}\n              onCloseButtonClick={this.onCloseButtonClick}\n              onInfoButtonClick={this.onInfoButtonClick}\n            />\n          )}\n        </Map>\n        <TemporaryDrawer\n          wikiDesc={this.state.wikiDesc}\n          thumbnailUrl={this.state.thumbnailUrl}\n          leftDrawer={this.state.leftDrawer}\n          openDrawer={this.state.openDrawer}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n    ) : (\n      <CircularIndeterminate />\n    );\n  }\n}\n\nexport default NearbyTreesMap;\n","import React, { Component } from \"react\";\nimport NearbyTreesMap from \"./nearbyTreesMap\";\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div>\n        <NearbyTreesMap\n          address={\n            this.props.location.state ? this.props.location.state.address : \"\"\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>404</h1>\n        </div>\n        <p>Wow c'est la hess ici ou quoi ?</p>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport './index.css'\nimport HomePage from './components/homepage';\nimport Explore from './components/explore';\nimport AroundMe from './components/aroundMe';\nimport NotFound from './notfound';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <HashRouter>\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/around-me\" component={AroundMe} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    </HashRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}